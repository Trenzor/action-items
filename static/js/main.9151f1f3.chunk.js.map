{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","actionItems","map","row","index","key","actionItem","dueDate","onClick","removeActionItem","Table","this","Component","Form","handleChange","event","target","name","value","setState","submitForm","handleSubmit","state","initialState","for","type","id","onChange","App","filter","i","className","ReactDOM","render","document","getElementById"],"mappings":"qQAEMA,EAAc,WAChB,OACI,+BACI,4BACI,sCACA,wCACA,yCAKVC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,YAAYC,KAAI,SAACC,EAAKC,GACrC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,YACT,4BAAKH,EAAII,SACT,4BACI,4BAAQC,QAAS,kBAAMT,EAAMU,iBAAiBL,KAA9C,eAMhB,OAAO,+BAAQJ,IAiBJU,E,iLAbD,IAAD,EAEqCC,KAAKZ,MAAvCE,EAFH,EAEGA,YAAaQ,EAFhB,EAEgBA,iBAErB,OACI,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,YAAaA,EAAaQ,iBAAkBA,S,GARnDG,a,OCuBLC,E,YAjDX,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAUVe,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBC,EADY,EACZA,KAAMC,EADM,EACNA,MAEd,EAAKC,SAAL,eACKF,EAAOC,KAfG,EAmBnBE,WAAa,WACT,EAAKrB,MAAMsB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAChBjB,WAAY,GACZC,QAAS,IAGb,EAAKe,MAAQ,EAAKC,aARH,E,sEAwBT,IAAD,EAC2BZ,KAAKW,MAA7BhB,EADH,EACGA,WAAYC,EADf,EACeA,QAEpB,OACE,8BACE,2BAAOiB,IAAI,cAAX,eACA,2BACEC,KAAK,OACLR,KAAK,aACLS,GAAG,aACHR,MAAOZ,EACPqB,SAAUhB,KAAKG,eACjB,2BAAOU,IAAI,WAAX,YACA,2BACEC,KAAK,OACLR,KAAK,UACLS,GAAG,UACHR,MAAOX,EACPoB,SAAUhB,KAAKG,eACf,2BAAOW,KAAK,SAASP,MAAM,OAAOV,QAASG,KAAKS,kB,GA5C3CR,aCqCJgB,E,2MAlCXN,MAAQ,CACJrB,YAAa,I,EAGjBQ,iBAAmB,SAAAL,GAAU,IACjBH,EAAgB,EAAKqB,MAArBrB,YAER,EAAKkB,SAAS,CACVlB,YAAaA,EAAY4B,QAAO,SAACvB,EAAYwB,GACzC,OAAOA,IAAM1B,Q,EAKzBiB,aAAe,SAAAf,GACX,EAAKa,SAAS,CAAElB,YAAY,GAAD,mBAAM,EAAKqB,MAAMrB,aAAjB,CAA8BK,O,wEAGnD,IAEEL,EAAgBU,KAAKW,MAArBrB,YAER,OACI,yBAAK8B,UAAU,aACX,4CACA,0EACA,kBAAC,EAAD,CAAO9B,YAAaA,EAAaQ,iBAAkBE,KAAKF,mBACxD,uCACA,kBAAC,EAAD,CAAMY,aAAcV,KAAKU,oB,GA7BvBT,a,MCClBoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9151f1f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Action</th>\n                <th>Due Date</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\nconst TableBody = props => {\n    const rows = props.actionItems.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.actionItem}</td>\n                <td>{row.dueDate}</td>\n                <td>\n                    <button onClick={() => props.removeActionItem(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n\n    return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n    render() {\n\n        const { actionItems, removeActionItem } = this.props\n\n        return (\n            <table>\n                <TableHeader />\n                <TableBody actionItems={actionItems} removeActionItem={removeActionItem}/>\n            </table>\n        )\n    }\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            actionItem: '',\n            dueDate: '',\n        }\n\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const { actionItem, dueDate } = this.state;\n      \n        return (\n          <form>\n            <label for=\"actionItem\">Action Item</label>\n            <input\n              type=\"text\"\n              name=\"actionItem\"\n              id=\"actionItem\"\n              value={actionItem}\n              onChange={this.handleChange} />\n            <label for=\"dueDate\">Due Date</label>\n            <input\n              type=\"date\"\n              name=\"dueDate\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={this.handleChange} />\n              <input type=\"button\" value=\"Save\" onClick={this.submitForm}/>\n          </form>\n        );\n      }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    state = {\n        actionItems: [],\n    }\n\n    removeActionItem = index => {\n        const { actionItems } = this.state\n        \n        this.setState({\n            actionItems: actionItems.filter((actionItem, i) => {\n                return i !== index\n            }),\n        })\n    }\n    \n    handleSubmit = actionItem => {\n        this.setState({ actionItems: [...this.state.actionItems, actionItem] })\n    }\n\n    render() {\n\n        const { actionItems } = this.state\n                \n        return (\n            <div className=\"container\">\n                <h1>Action Items</h1>\n                <p>Add your action item and its due date below</p>\n                <Table actionItems={actionItems} removeActionItem={this.removeActionItem} />\n                <h2>Add New</h2>\n                <Form handleSubmit={this.handleSubmit}/>\n            </div>\n        )\n    } \n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}